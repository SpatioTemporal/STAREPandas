import starepandas
import geopandas
import pandas
import numpy

# data = {
#     'pop_est': [361313.0],
#     'continent': ['Europe'],
#     'name': ['Iceland'],
#     'iso_a3': ['ISL'],
#     'gdp_md_est': [24188],
#     'geometry': [
#         "POLYGON ((-14.50869544112923 66.45589223903143, -14.73963741704161 65.8087482774403, -13.60973222497981 65.12667104761987, -14.9098337467949 64.36408193628868, -17.79443803554342 63.67874909123385, -18.65624589687499 63.49638296167582, -19.97275468594276 63.64363495549153, -22.76297197111016 63.96017894149539, -21.77848425951768 64.40211579045551, -23.95504391121911 64.8911298692335, -22.18440263517036 65.08496816676031, -22.22742326505333 65.37859365504274, -24.32618404793934 65.61118927678847, -23.65051469572309 66.26251902939522, -22.13492245125089 66.41046865504687, -20.57628373867955 65.73211212835143, -19.05684160000159 66.27660085719477, -17.79862382655905 65.99385325790978, -16.16781897629212 66.52679230413587, -14.50869544112923 66.45589223903143))"
#     ]
# }

countries = {
    'pop_est': [361313.0, 211049527.0],
    'continent': ['Europe', 'South America'],
    'name': ['Iceland', 'Brazil'],
    'iso_a3': ['ISL', 'BRA'],
    'gdp_md_est': [24188, 1839758],
    'geometry': [
        # Iceland geometry
        "POLYGON ((-14.50869544112923 66.45589223903143, -14.73963741704161 65.8087482774403, -13.60973222497981 65.12667104761987, -14.9098337467949 64.36408193628868, -17.79443803554342 63.67874909123385, -18.65624589687499 63.49638296167582, -19.97275468594276 63.64363495549153, -22.76297197111016 63.96017894149539, -21.77848425951768 64.40211579045551, -23.95504391121911 64.8911298692335, -22.18440263517036 65.08496816676031, -22.22742326505333 65.37859365504274, -24.32618404793934 65.61118927678847, -23.65051469572309 66.26251902939522, -22.13492245125089 66.41046865504687, -20.57628373867955 65.73211212835143, -19.05684160000159 66.27660085719477, -17.79862382655905 65.99385325790978, -16.16781897629212 66.52679230413587, -14.50869544112923 66.45589223903143))",
        # Brazil geometry
        "POLYGON ((-53.37366166849824 -33.76837778090076, -53.6505439927181 -33.20200408298183, -53.20958899597154 -32.72766611097472, -53.78795162618219 -32.04724252698762, -54.57245154480512 -31.49451140719375, -55.60151017924935 -30.85387867607139, -55.97324459494094 -30.8830758603163, -56.97602576356473 -30.10968637463613, -57.62513342958296 -30.21629485445426, -56.29089962423908 -28.85276051200089, -55.16228634298457 -27.88191537853346, -54.49072526713552 -27.47475676850579, -53.64873531758789 -26.92347258881609, -53.62834896504874 -26.12486500417747, -54.13004960795439 -25.54763925547725, -54.62529069682358 -25.73925546641551, -54.42894609233059 -25.16218474701217, -54.29347632507745 -24.57079965586396, -54.29295956075452 -24.02101409271073, -54.65283423523513 -23.83957813893396, -55.02790178080955 -24.00127369557523, -55.40074723979542 -23.9569353166688, -55.51763932963964 -23.57199757252664, -55.61068274598114 -22.65561939869485, -55.79795813660691 -22.35692962004782, -56.47331743022939 -22.08630014413528, -56.8815095689029 -22.28215382252148, -57.93715572776129 -22.09017587655717, -57.8706739976178 -20.73268767668195, -58.16639238140804 -20.17670094165368, -57.85380164247451 -19.96999521248619, -57.94999732118583 -19.40000416430682, -57.67600887717431 -18.96183969490403, -57.49837114117099 -18.17418751391129, -57.734558274961 -17.55246835700777, -58.28080400250225 -17.27171030036602, -58.38805843772404 -16.87710906338528, -58.24121985536668 -16.29957325609129, -60.15838965517904 -16.25828378669009, -60.54296566429515 -15.0939104142896, -60.25114885114294 -15.07721892665932, -60.26432634137737 -14.64597909918364, -60.45919816755003 -14.35400725673455, -60.50330400251114 -13.77595468511766, -61.08412126325565 -13.4793836401946, -61.71320431176078 -13.48920216233005, -62.12708085798639 -13.19878061284972, -62.80306026879639 -13.00065317144269, -63.19649878605057 -12.62703256597243, -64.3163529120316 -12.46197804123219, -65.40228146021303 -11.56627044031715, -65.32189876978302 -10.89587208419468, -65.44483700220539 -10.51145110437543, -65.33843522811642 -9.761987806846392, -66.64690833196281 -9.931331475466862, -67.17380123561074 -10.30681243249961, -68.04819230820539 -10.71205901453249, -68.27125362819326 -11.01452117273682, -68.78615759954948 -11.03638030359628, -69.52967810736496 -10.95173430750219, -70.09375220404689 -11.12397185633101, -70.54868567572841 -11.00914682377847))"
    ]
}
# countries = geopandas.read_file(geopandas.datasets.get_path("naturalearth_lowres"))
countries = starepandas.STAREDataFrame(countries)


def test_types():
    # Can we send: int, list and array to intersects?
    series = pandas.Series([[4035225266123964416], [4254212798004854789, 4255901647865118724]])
    assert 2 == starepandas.series_intersects(series, 4035225266123964416).sum()
    assert 2 == starepandas.series_intersects(series, [4035225266123964416]).sum()
    assert 2 == starepandas.series_intersects(series, numpy.array([4035225266123964416])).sum()


def test_polygon():
    iceland = countries[countries.name == 'Iceland']
    sids = starepandas.sids_from_gdf(iceland, level=8, force_ccw=True)
    fname = starepandas.datasets.get_path('MOD05_L2.A2019336.0000.061.2019336211522.hdf')
    modis = starepandas.read_granule(fname, latlon=False, sidecar=True, nom_res='5km')
    intersects = modis.stare_intersects(sids.iloc[0])
    assert 1384 == sum(intersects)


def test_polygon2():
    brazil_sids = countries[countries.name == 'Brazil'].make_sids(level=5).iloc[0]
    cities = ['Buenos Aires', 'Brasilia', 'Santiago', 'Bogota', 'Caracas', 'Sao Paulo', 'Bridgetown']

    latitudes = [-34.58, -15.78, -33.45, 4.60, 10.48, -23.55, 13.1]
    longitudes = [-58.66, -47.91, -70.66, -74.08, -66.86, -46.63, -59.62]
    data = {'City': cities, 'Latitude': latitudes, 'Longitude': longitudes}

    cities = starepandas.STAREDataFrame(data)
    sids = starepandas.sids_from_xy(cities.Longitude, cities.Latitude, level=27)
    cities.set_sids(sids, inplace=True)

    intersects_stare = cities.stare_intersects(brazil_sids)
    assert sum(intersects_stare) == 2

    disjoint = cities.stare_disjoint((brazil_sids))
    assert sum(disjoint) == 5
